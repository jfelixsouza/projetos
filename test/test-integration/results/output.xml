<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.8 on win32)" generated="20230331 09:08:53.933" rpa="false" schemaversion="3">
<suite id="s1" name="TestCases" source="C:\Users\JefersonFelixdosReis\robotEstudos\test\test-integration\testes\TestCases.robot">
<test id="s1-t1" name="Cenario 1 - Validar especificações do produto" line="15">
<kw name="Abrir navegador" library="Resource" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>browser=${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230331 09:08:54.861" level="INFO">Opening browser 'chrome' to base url 'None'.</msg>
<status status="PASS" starttime="20230331 09:08:54.861" endtime="20230331 09:08:58.984"/>
</kw>
<status status="PASS" starttime="20230331 09:08:54.861" endtime="20230331 09:08:58.985"/>
</kw>
<kw name="DADO que acesso o home do site" library="home">
<kw name="Go To" library="Selenium2Library">
<arg>${HOME_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230331 09:08:58.986" level="INFO">Opening url 'https://advantageonlineshopping.com'</msg>
<status status="PASS" starttime="20230331 09:08:58.986" endtime="20230331 09:09:01.920"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_MENU}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:01.920" endtime="20230331 09:09:04.996"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<arg>timeout=20</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:04.997" endtime="20230331 09:09:08.665"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:08.853" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-260.png"&gt;&lt;img src="selenium-screenshot-260.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:08.665" endtime="20230331 09:09:08.853"/>
</kw>
<status status="PASS" starttime="20230331 09:08:58.985" endtime="20230331 09:09:08.853"/>
</kw>
<kw name="QUANDO clico no botão &quot;See Offer&quot;" library="home">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//h3[@class='roboto-regular center ng-scope'][contains(.,'SPECIAL OFFER')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:08.854" endtime="20230331 09:09:08.878"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:08.879" level="INFO">Clicking element '//button[@id='see_offer_btn']'.</msg>
<status status="PASS" starttime="20230331 09:09:08.879" endtime="20230331 09:09:08.938"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:09.065" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-261.png"&gt;&lt;img src="selenium-screenshot-261.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:08.938" endtime="20230331 09:09:09.065"/>
</kw>
<status status="PASS" starttime="20230331 09:09:08.854" endtime="20230331 09:09:09.065"/>
</kw>
<kw name="ENTAO validamos as especificações do produto de acordo com o banco de dados" library="databaseMassas">
<kw name="Connect To Database" library="DatabaseLibrary">
<arg>dbapiModuleName=pymysql</arg>
<arg>dbName=banco_teste_automacao</arg>
<arg>dbUsername=root</arg>
<arg>dbPassword=EL6529jo1010&amp;</arg>
<arg>dbHost=localhost</arg>
<arg>dbPort=3306</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20230331 09:09:09.176" level="INFO">Connecting using : pymysql.connect(db=banco_teste_automacao, user=root, passwd=EL6529jo1010&amp;, host=localhost, port=3306, charset=None) </msg>
<status status="PASS" starttime="20230331 09:09:09.066" endtime="20230331 09:09:09.187"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT}</var>
<arg>Select * from massas</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.187" level="INFO">Executing : Query  |  Select * from massas </msg>
<msg timestamp="20230331 09:09:09.189" level="INFO">${RESPOSTA_SELECT} = ((1, 'HP PAVILION 15Z TOUCH LAPTOP', 'Simplicity', '15.6-inch diagonal Full HD WLED-backlit Display (1920x1080) Touchscreen', '1920x1080', '15.6', '16GB DDR3 - 2 DIMM', 'Windows 10', 'AMD Quad-Core A1...</msg>
<status status="PASS" starttime="20230331 09:09:09.187" endtime="20230331 09:09:09.189"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${RESPOSTA_SELECT}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230331 09:09:09.190" level="INFO">((1, 'HP PAVILION 15Z TOUCH LAPTOP', 'Simplicity', '15.6-inch diagonal Full HD WLED-backlit Display (1920x1080) Touchscreen', '1920x1080', '15.6', '16GB DDR3 - 2 DIMM', 'Windows 10', 'AMD Quad-Core A10-8700P Processor + AMD Radeon(TM) R6 Graphics', 'Yes', '5.51 lb', 'GRAY'),)</msg>
<status status="PASS" starttime="20230331 09:09:09.189" endtime="20230331 09:09:09.190"/>
</kw>
<kw name="Check If Exists In Database" library="DatabaseLibrary">
<arg>select * from massas where IDMASSAS=1 and NAME_PRODUCT='HP PAVILION 15Z TOUCH LAPTOP'</arg>
<doc>Check if any row would be returned by given the input `selectStatement`. If there are no results, then this will
throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction
commit or rollback.</doc>
<msg timestamp="20230331 09:09:09.190" level="INFO">Executing : Check If Exists In Database  |  select * from massas where IDMASSAS=1 and NAME_PRODUCT='HP PAVILION 15Z TOUCH LAPTOP' </msg>
<msg timestamp="20230331 09:09:09.190" level="INFO">Executing : Query  |  select * from massas where IDMASSAS=1 and NAME_PRODUCT='HP PAVILION 15Z TOUCH LAPTOP' </msg>
<status status="PASS" starttime="20230331 09:09:09.190" endtime="20230331 09:09:09.191"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_CUSTOMIZATION}</var>
<arg>select distinct CUSTOMIZATION from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.191" level="INFO">Executing : Query  |  select distinct CUSTOMIZATION from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.191" level="INFO">${RESPOSTA_SELECT_CUSTOMIZATION} = (('Simplicity',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.191" endtime="20230331 09:09:09.191"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_DISPLAY}</var>
<arg>select distinct DISPLAY from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.192" level="INFO">Executing : Query  |  select distinct DISPLAY from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.192" level="INFO">${RESPOSTA_SELECT_DISPLAY} = (('15.6-inch diagonal Full HD WLED-backlit Display (1920x1080) Touchscreen',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.192" endtime="20230331 09:09:09.192"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_DISPLAY_RESOLUTION}</var>
<arg>select distinct DISPLAY_RESOLUTION from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.193" level="INFO">Executing : Query  |  select distinct DISPLAY_RESOLUTION from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.193" level="INFO">${RESPOSTA_SELECT_DISPLAY_RESOLUTION} = (('1920x1080',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.192" endtime="20230331 09:09:09.193"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_DISPLAY_SIZE}</var>
<arg>select distinct DISPLAY_SIZE from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.194" level="INFO">Executing : Query  |  select distinct DISPLAY_SIZE from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.194" level="INFO">${RESPOSTA_SELECT_DISPLAY_SIZE} = (('15.6',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.193" endtime="20230331 09:09:09.194"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_MEMORY}</var>
<arg>select distinct MEMORY from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.194" level="INFO">Executing : Query  |  select distinct MEMORY from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.195" level="INFO">${RESPOSTA_SELECT_MEMORY} = (('16GB DDR3 - 2 DIMM',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.194" endtime="20230331 09:09:09.195"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_OPERATING_SYSTEM}</var>
<arg>select distinct OPERATING_SYSTEM from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.195" level="INFO">Executing : Query  |  select distinct OPERATING_SYSTEM from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.196" level="INFO">${RESPOSTA_SELECT_OPERATING_SYSTEM} = (('Windows 10',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.195" endtime="20230331 09:09:09.196"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_PROCESSOR}</var>
<arg>select distinct PROCESSOR from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.196" level="INFO">Executing : Query  |  select distinct PROCESSOR from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.197" level="INFO">${RESPOSTA_SELECT_PROCESSOR} = (('AMD Quad-Core A10-8700P Processor + AMD Radeon(TM) R6 Graphics',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.196" endtime="20230331 09:09:09.197"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_TOUCHSCREEN}</var>
<arg>select distinct TOUCHSCREEN from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.197" level="INFO">Executing : Query  |  select distinct TOUCHSCREEN from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.198" level="INFO">${RESPOSTA_SELECT_TOUCHSCREEN} = (('Yes',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.197" endtime="20230331 09:09:09.198"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${RESPOSTA_SELECT_WEIGHT}</var>
<arg>select distinct WEIGHT from massas where IDMASSAS=1</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230331 09:09:09.198" level="INFO">Executing : Query  |  select distinct WEIGHT from massas where IDMASSAS=1 </msg>
<msg timestamp="20230331 09:09:09.199" level="INFO">${RESPOSTA_SELECT_WEIGHT} = (('5.51 lb',),)</msg>
<status status="PASS" starttime="20230331 09:09:09.198" endtime="20230331 09:09:09.199"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_CUSTOMIZATION}</arg>
<arg>(('Simplicity',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.199" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.199" endtime="20230331 09:09:09.199"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_DISPLAY}</arg>
<arg>(('15.6-inch diagonal Full HD WLED-backlit Display (1920x1080) Touchscreen',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.199" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.199" endtime="20230331 09:09:09.200"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_DISPLAY_RESOLUTION}</arg>
<arg>(('1920x1080',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.200" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.200" endtime="20230331 09:09:09.200"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_DISPLAY_SIZE}</arg>
<arg>(('15.6',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.200" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.200" endtime="20230331 09:09:09.200"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_MEMORY}</arg>
<arg>(('16GB DDR3 - 2 DIMM',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.200" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.200" endtime="20230331 09:09:09.200"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_OPERATING_SYSTEM}</arg>
<arg>(('Windows 10',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.200" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.200" endtime="20230331 09:09:09.201"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_PROCESSOR}</arg>
<arg>(('AMD Quad-Core A10-8700P Processor + AMD Radeon(TM) R6 Graphics',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.201" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.201" endtime="20230331 09:09:09.201"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_TOUCHSCREEN}</arg>
<arg>(('Yes',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.201" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.201" endtime="20230331 09:09:09.201"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_SELECT_WEIGHT}</arg>
<arg>(('5.51 lb',),)</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230331 09:09:09.201" level="INFO">Argument types are:
&lt;class 'tuple'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230331 09:09:09.201" endtime="20230331 09:09:09.201"/>
</kw>
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20230331 09:09:09.201" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20230331 09:09:09.201" endtime="20230331 09:09:09.202"/>
</kw>
<status status="PASS" starttime="20230331 09:09:09.066" endtime="20230331 09:09:09.202"/>
</kw>
<kw name="Fechar navegador" library="Resource" type="TEARDOWN">
<kw name="Close Browser" library="Selenium2Library">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230331 09:09:09.202" endtime="20230331 09:09:11.663"/>
</kw>
<status status="PASS" starttime="20230331 09:09:09.202" endtime="20230331 09:09:11.664"/>
</kw>
<doc>Teste para validar pagina HOME e Menu Special Offer</doc>
<status status="PASS" starttime="20230331 09:08:54.860" endtime="20230331 09:09:11.664"/>
</test>
<test id="s1-t2" name="Cenario 2 - Validar alteração de cor do produto no carrinho" line="23">
<kw name="Abrir navegador" library="Resource" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>browser=${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230331 09:09:11.671" level="INFO">Opening browser 'chrome' to base url 'None'.</msg>
<status status="PASS" starttime="20230331 09:09:11.670" endtime="20230331 09:09:13.073"/>
</kw>
<status status="PASS" starttime="20230331 09:09:11.669" endtime="20230331 09:09:13.073"/>
</kw>
<kw name="DADO que acesso o home do site" library="home">
<kw name="Go To" library="Selenium2Library">
<arg>${HOME_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230331 09:09:13.074" level="INFO">Opening url 'https://advantageonlineshopping.com'</msg>
<status status="PASS" starttime="20230331 09:09:13.074" endtime="20230331 09:09:14.168"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_MENU}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:14.168" endtime="20230331 09:09:15.064"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<arg>timeout=20</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:15.064" endtime="20230331 09:09:17.683"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:17.852" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-262.png"&gt;&lt;img src="selenium-screenshot-262.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:17.683" endtime="20230331 09:09:17.852"/>
</kw>
<status status="PASS" starttime="20230331 09:09:13.073" endtime="20230331 09:09:17.853"/>
</kw>
<kw name="QUANDO clico no botão &quot;See Offer&quot;" library="home">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//h3[@class='roboto-regular center ng-scope'][contains(.,'SPECIAL OFFER')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:17.853" endtime="20230331 09:09:17.884"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:17.884" level="INFO">Clicking element '//button[@id='see_offer_btn']'.</msg>
<status status="PASS" starttime="20230331 09:09:17.884" endtime="20230331 09:09:17.931"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:18.041" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-263.png"&gt;&lt;img src="selenium-screenshot-263.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:17.931" endtime="20230331 09:09:18.041"/>
</kw>
<status status="PASS" starttime="20230331 09:09:17.853" endtime="20230331 09:09:18.041"/>
</kw>
<kw name="E altero a cor do produto de acordo com a cor no banco de dados" library="cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//span[contains(@class,'bunny productColor ng-scope GRAY')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:18.041" endtime="20230331 09:09:20.838"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>//span[contains(@class,'bunny productColor ng-scope GRAY')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:20.838" level="INFO">Clicking element '//span[contains(@class,'bunny productColor ng-scope GRAY')]'.</msg>
<status status="PASS" starttime="20230331 09:09:20.838" endtime="20230331 09:09:21.050"/>
</kw>
<status status="PASS" starttime="20230331 09:09:18.041" endtime="20230331 09:09:21.050"/>
</kw>
<kw name="E clico em &quot;add cart&quot;" library="cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//button[@name='save_to_cart'][contains(.,'ADD TO CART')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:21.050" endtime="20230331 09:09:21.088"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>//button[contains(@name,'save_to_cart')]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:21.088" level="INFO">Clicking button '//button[contains(@name,'save_to_cart')]'.</msg>
<status status="PASS" starttime="20230331 09:09:21.088" endtime="20230331 09:09:21.159"/>
</kw>
<status status="PASS" starttime="20230331 09:09:21.050" endtime="20230331 09:09:21.159"/>
</kw>
<kw name="ENTAO validamos que o produto foi adcionado com a cor selecionada" library="cart">
<kw name="Click Element" library="Selenium2Library">
<arg>//a[@aria-label='ShoppingCart']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:21.160" level="INFO">Clicking element '//a[@aria-label='ShoppingCart']'.</msg>
<status status="PASS" starttime="20230331 09:09:21.160" endtime="20230331 09:09:21.216"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:21.321" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-264.png"&gt;&lt;img src="selenium-screenshot-264.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:21.216" endtime="20230331 09:09:21.321"/>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<arg>//span[contains(@title,'GRAY')]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230331 09:09:21.331" level="INFO">Current page contains element '//span[contains(@title,'GRAY')]'.</msg>
<status status="PASS" starttime="20230331 09:09:21.321" endtime="20230331 09:09:21.331"/>
</kw>
<status status="PASS" starttime="20230331 09:09:21.160" endtime="20230331 09:09:21.331"/>
</kw>
<kw name="Fechar navegador" library="Resource" type="TEARDOWN">
<kw name="Close Browser" library="Selenium2Library">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230331 09:09:21.332" endtime="20230331 09:09:23.952"/>
</kw>
<status status="PASS" starttime="20230331 09:09:21.332" endtime="20230331 09:09:23.953"/>
</kw>
<doc>Teste para validar alteração da cor do produto</doc>
<status status="PASS" starttime="20230331 09:09:11.664" endtime="20230331 09:09:23.953"/>
</test>
<test id="s1-t3" name="Cenario 3 - Validar página de checkout" line="33">
<kw name="Abrir navegador" library="Resource" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>browser=${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230331 09:09:23.959" level="INFO">Opening browser 'chrome' to base url 'None'.</msg>
<status status="PASS" starttime="20230331 09:09:23.959" endtime="20230331 09:09:25.336"/>
</kw>
<status status="PASS" starttime="20230331 09:09:23.957" endtime="20230331 09:09:25.337"/>
</kw>
<kw name="DADO que acesso o home do site" library="home">
<kw name="Go To" library="Selenium2Library">
<arg>${HOME_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230331 09:09:25.338" level="INFO">Opening url 'https://advantageonlineshopping.com'</msg>
<status status="PASS" starttime="20230331 09:09:25.338" endtime="20230331 09:09:26.430"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_MENU}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:26.430" endtime="20230331 09:09:27.313"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<arg>timeout=20</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:27.313" endtime="20230331 09:09:29.930"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:30.119" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-265.png"&gt;&lt;img src="selenium-screenshot-265.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:29.931" endtime="20230331 09:09:30.119"/>
</kw>
<status status="PASS" starttime="20230331 09:09:25.337" endtime="20230331 09:09:30.119"/>
</kw>
<kw name="E clico no botão &quot;See Offer&quot;" library="home">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//h3[@class='roboto-regular center ng-scope'][contains(.,'SPECIAL OFFER')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:30.119" endtime="20230331 09:09:30.144"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:30.145" level="INFO">Clicking element '//button[@id='see_offer_btn']'.</msg>
<status status="PASS" starttime="20230331 09:09:30.145" endtime="20230331 09:09:30.191"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:30.336" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-266.png"&gt;&lt;img src="selenium-screenshot-266.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:30.191" endtime="20230331 09:09:30.336"/>
</kw>
<status status="PASS" starttime="20230331 09:09:30.119" endtime="20230331 09:09:30.337"/>
</kw>
<kw name="QUANDO seleciono a quantidade desejada" library="cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//div[@class='plus']</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:30.337" endtime="20230331 09:09:31.220"/>
</kw>
<kw name="Double Click Element" library="Selenium2Library">
<arg>//div[@class='plus']</arg>
<doc>Double clicks the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:31.220" level="INFO">Double clicking element '//div[@class='plus']'.</msg>
<status status="PASS" starttime="20230331 09:09:31.220" endtime="20230331 09:09:31.505"/>
</kw>
<status status="PASS" starttime="20230331 09:09:30.337" endtime="20230331 09:09:31.505"/>
</kw>
<kw name="E clico em &quot;add cart&quot;" library="cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//button[@name='save_to_cart'][contains(.,'ADD TO CART')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:31.506" endtime="20230331 09:09:31.529"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>//button[contains(@name,'save_to_cart')]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:31.530" level="INFO">Clicking button '//button[contains(@name,'save_to_cart')]'.</msg>
<status status="PASS" starttime="20230331 09:09:31.529" endtime="20230331 09:09:31.595"/>
</kw>
<status status="PASS" starttime="20230331 09:09:31.506" endtime="20230331 09:09:31.595"/>
</kw>
<kw name="ENTAO acesso a pagina do check-out" library="cart">
<kw name="Click Element" library="Selenium2Library">
<arg>//a[@aria-label='ShoppingCart']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:31.597" level="INFO">Clicking element '//a[@aria-label='ShoppingCart']'.</msg>
<status status="PASS" starttime="20230331 09:09:31.596" endtime="20230331 09:09:31.649"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//button[contains(@data-ng-click,'checkout()')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:31.649" endtime="20230331 09:09:31.884"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>//button[contains(@data-ng-click,'checkout()')]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:31.885" level="INFO">Clicking button '//button[contains(@data-ng-click,'checkout()')]'.</msg>
<status status="PASS" starttime="20230331 09:09:31.885" endtime="20230331 09:09:31.949"/>
</kw>
<status status="PASS" starttime="20230331 09:09:31.596" endtime="20230331 09:09:31.949"/>
</kw>
<kw name="E validamos a soma dos preços correspondente ao total" library="cart">
<kw name="Page Should Contain Element" library="Selenium2Library">
<arg>checkOutButton</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230331 09:09:31.959" level="INFO">Current page contains element 'checkOutButton'.</msg>
<status status="PASS" starttime="20230331 09:09:31.950" endtime="20230331 09:09:31.959"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:32.166" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-267.png"&gt;&lt;img src="selenium-screenshot-267.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:31.960" endtime="20230331 09:09:32.166"/>
</kw>
<status status="PASS" starttime="20230331 09:09:31.950" endtime="20230331 09:09:32.167"/>
</kw>
<kw name="Fechar navegador" library="Resource" type="TEARDOWN">
<kw name="Close Browser" library="Selenium2Library">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230331 09:09:32.168" endtime="20230331 09:09:34.643"/>
</kw>
<status status="PASS" starttime="20230331 09:09:32.167" endtime="20230331 09:09:34.643"/>
</kw>
<doc>Teste para validar pagina check-out</doc>
<status status="PASS" starttime="20230331 09:09:23.953" endtime="20230331 09:09:34.643"/>
</test>
<test id="s1-t4" name="Cenario 4 - Remover produto do carrinho de compras" line="46">
<kw name="Abrir navegador" library="Resource" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>browser=${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230331 09:09:34.649" level="INFO">Opening browser 'chrome' to base url 'None'.</msg>
<status status="PASS" starttime="20230331 09:09:34.648" endtime="20230331 09:09:36.019"/>
</kw>
<status status="PASS" starttime="20230331 09:09:34.648" endtime="20230331 09:09:36.019"/>
</kw>
<kw name="DADO que acesso o home do site" library="home">
<kw name="Go To" library="Selenium2Library">
<arg>${HOME_URL}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20230331 09:09:36.022" level="INFO">Opening url 'https://advantageonlineshopping.com'</msg>
<status status="PASS" starttime="20230331 09:09:36.020" endtime="20230331 09:09:37.131"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_MENU}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:37.131" endtime="20230331 09:09:38.060"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<arg>timeout=20</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:38.060" endtime="20230331 09:09:40.683"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:40.849" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-268.png"&gt;&lt;img src="selenium-screenshot-268.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:40.684" endtime="20230331 09:09:40.849"/>
</kw>
<status status="PASS" starttime="20230331 09:09:36.020" endtime="20230331 09:09:40.849"/>
</kw>
<kw name="QUANDO clico no botão &quot;See Offer&quot;" library="home">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//h3[@class='roboto-regular center ng-scope'][contains(.,'SPECIAL OFFER')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:40.849" endtime="20230331 09:09:40.884"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>${HOME_BTN_OFFER}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:40.885" level="INFO">Clicking element '//button[@id='see_offer_btn']'.</msg>
<status status="PASS" starttime="20230331 09:09:40.884" endtime="20230331 09:09:40.931"/>
</kw>
<kw name="Capture Page Screenshot" library="Selenium2Library">
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20230331 09:09:41.049" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-269.png"&gt;&lt;img src="selenium-screenshot-269.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20230331 09:09:40.931" endtime="20230331 09:09:41.049"/>
</kw>
<status status="PASS" starttime="20230331 09:09:40.849" endtime="20230331 09:09:41.049"/>
</kw>
<kw name="E clico em &quot;add cart&quot;" library="cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//button[@name='save_to_cart'][contains(.,'ADD TO CART')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:41.049" endtime="20230331 09:09:42.159"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>//button[contains(@name,'save_to_cart')]</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:42.161" level="INFO">Clicking button '//button[contains(@name,'save_to_cart')]'.</msg>
<status status="PASS" starttime="20230331 09:09:42.160" endtime="20230331 09:09:42.316"/>
</kw>
<status status="PASS" starttime="20230331 09:09:41.049" endtime="20230331 09:09:42.317"/>
</kw>
<kw name="E clico em carrinho de compras" library="cart">
<kw name="Click Element" library="Selenium2Library">
<arg>//a[@aria-label='ShoppingCart']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:42.318" level="INFO">Clicking element '//a[@aria-label='ShoppingCart']'.</msg>
<status status="PASS" starttime="20230331 09:09:42.318" endtime="20230331 09:09:42.377"/>
</kw>
<status status="PASS" starttime="20230331 09:09:42.318" endtime="20230331 09:09:42.377"/>
</kw>
<kw name="E removo o produto do carrinho" library="cart">
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>//a[@class='remove red ng-scope'][contains(.,'REMOVE')]</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20230331 09:09:42.379" endtime="20230331 09:09:42.627"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>//a[@class='remove red ng-scope'][contains(.,'REMOVE')]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230331 09:09:42.628" level="INFO">Clicking element '//a[@class='remove red ng-scope'][contains(.,'REMOVE')]'.</msg>
<status status="PASS" starttime="20230331 09:09:42.627" endtime="20230331 09:09:42.676"/>
</kw>
<status status="PASS" starttime="20230331 09:09:42.377" endtime="20230331 09:09:42.676"/>
</kw>
<kw name="ENTAO validamos que o carrinho de compras vazio" library="cart">
<kw name="Page Should Contain Element" library="Selenium2Library">
<arg>//label[@class='roboto-bold ng-scope'][contains(.,'Your shopping cart is empty')]</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20230331 09:09:42.690" level="INFO">Current page contains element '//label[@class='roboto-bold ng-scope'][contains(.,'Your shopping cart is empty')]'.</msg>
<status status="PASS" starttime="20230331 09:09:42.677" endtime="20230331 09:09:42.690"/>
</kw>
<status status="PASS" starttime="20230331 09:09:42.676" endtime="20230331 09:09:42.690"/>
</kw>
<kw name="Fechar navegador" library="Resource" type="TEARDOWN">
<kw name="Close Browser" library="Selenium2Library">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20230331 09:09:42.691" endtime="20230331 09:09:45.161"/>
</kw>
<status status="PASS" starttime="20230331 09:09:42.691" endtime="20230331 09:09:45.161"/>
</kw>
<doc>Teste para validar carrinho vazio</doc>
<status status="PASS" starttime="20230331 09:09:34.643" endtime="20230331 09:09:45.161"/>
</test>
<doc>Teste NTTDATA</doc>
<status status="PASS" starttime="20230331 09:08:53.950" endtime="20230331 09:09:45.166"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="TestCases">TestCases</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
